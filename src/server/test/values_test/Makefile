# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = ../../../third_party/gtest

# Where to find user code.
USER_DIR = ../../base/logic/

THIRD_PATH = ../../public

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = values_unittest

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

USER_HEADERS = -I../../base/  -I../../public/ -I/usr/include/mysql/  -I/usr/local/freetds/include/\
	-I./../../../third_party/hiredis/
# House-keeping build targets.

all : $(TESTS)

clean :
	rm -f $(TESTS) gtest.a gtest_main.a *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

base_values.o : $(USER_DIR)/base_values.cc $(USER_DIR)/base_values.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/base_values.cc $(USER_HEADERS)

basic_util.o : $(THIRD_PATH)/basic/basic_util.cc $(THIRD_PATH)/basic/basic_util.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/basic/basic_util.cc $(USER_HEADERS)

##操作
http_method.o : $(THIRD_PATH)/http/http_method.cc $(THIRD_PATH)/http/http_method.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/http/http_method.cc $(USER_HEADERS)
	
##协议层
http_packet.o: $(THIRD_PATH)/protocol/http_packet.cc $(THIRD_PATH)/protocol/http_packet.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/protocol/http_packet.cc $(USER_HEADERS)
	
##数据库存储
mem_storage_impl.o:$(THIRD_PATH)/storage/mem_storage_impl.cc $(THIRD_PATH)/storage/mem_storage_impl.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/storage/mem_storage_impl.cc $(USER_HEADERS)

mysql_storage_impl.o:$(THIRD_PATH)/storage/mysql_storage_impl.cc $(THIRD_PATH)/storage/mysql_storage_impl.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/storage/mysql_storage_impl.cc $(USER_HEADERS)

mssql_storage_impl.o:$(THIRD_PATH)/storage/mssql_storage_impl.cc $(THIRD_PATH)/storage/mssql_storage_impl.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/storage/mssql_storage_impl.cc $(USER_HEADERS)
	
redis_storage_impl.o:$(THIRD_PATH)/storage/redis_storage_impl.cc $(THIRD_PATH)/storage/redis_storage_impl.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/storage/redis_storage_impl.cc $(USER_HEADERS)
	
redis_warrper.o: $(THIRD_PATH)/storage/redis_warrper.c $(THIRD_PATH)/storage/redis_warrper.h $(GTEST_HEADERS)
	gcc -std=c99 -pedantic -c $(INCLUDE_PATHS) -O3 -fPIC  -Wall -W -Wstrict-prototypes -Wwrite-strings -g -ggdb $(THIRD_PATH)/storage/redis_warrper.c $(USER_HEADERS)

storage.o:$(THIRD_PATH)/storage/storage.cc $(THIRD_PATH)/storage/storage.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/storage/storage.cc $(USER_HEADERS)
	
##JSON
json_reader.o:$(THIRD_PATH)/json/json_reader.cpp $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/json/json_reader.cpp $(USER_HEADERS)

json_value.o:$(THIRD_PATH)/json/json_value.cpp  $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/json/json_value.cpp $(USER_HEADERS)

json_writer.o:$(THIRD_PATH)/json/json_writer.cpp $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/json/json_writer.cpp $(USER_HEADERS)
	
#日志
mig_log.o:$(THIRD_PATH)/log/mig_log.cc $(THIRD_PATH)/log/mig_log.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/log/mig_log.cc $(USER_HEADERS)
	


values_unittest.o : ./values_unittest.cc \
                     $(USER_DIR)/base_values.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./values_unittest.cc

values_unittest : base_values.o mig_log.o http_method.o basic_util.o\
	 http_method.o http_packet.o mem_storage_impl.o\
	mysql_storage_impl.o mssql_storage_impl.o redis_storage_impl.o redis_warrper.o\
	 json_writer.o\
	json_value.o json_reader.o storage.o values_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread -lcurl $^ -o $@
