// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "schema.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace schema {
namespace type {

namespace {

const ::google::protobuf::Descriptor* SchemaStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SchemaStatus_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SchemaStatus_Status_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_schema_2eproto() {
  protobuf_AddDesc_schema_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "schema.proto");
  GOOGLE_CHECK(file != NULL);
  SchemaStatus_descriptor_ = file->message_type(0);
  static const int SchemaStatus_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchemaStatus, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchemaStatus, last_modified_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchemaStatus, args_),
  };
  SchemaStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SchemaStatus_descriptor_,
      SchemaStatus::default_instance_,
      SchemaStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchemaStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchemaStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SchemaStatus));
  SchemaStatus_Status_descriptor_ = SchemaStatus_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_schema_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SchemaStatus_descriptor_, &SchemaStatus::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_schema_2eproto() {
  delete SchemaStatus::default_instance_;
  delete SchemaStatus_reflection_;
}

void protobuf_AddDesc_schema_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014schema.proto\022\013schema.type\"\345\002\n\014SchemaSt"
    "atus\022.\n\004code\030\001 \002(\0162 .schema.type.SchemaS"
    "tatus.Status\022\030\n\rlast_modified\030\002 \001(\004:\0010\022\014"
    "\n\004args\030\003 \003(\t\"\374\001\n\006Status\022\013\n\007SUCCESS\020\001\022\n\n\006"
    "FAILED\020\002\022\023\n\017PROTO_NOT_FOUND\020\003\022\010\n\004GONE\020\004\022"
    "\t\n\005MOVED\020\005\022\016\n\nTEMP_MOVED\020\006\022\014\n\010NOTFOUND\020\007"
    "\022\t\n\005RETRY\020\010\022\r\n\tEXCEPTION\020\t\022\021\n\rACCESS_DEN"
    "IED\020\n\022\021\n\rROBOTS_DENIED\020\013\022\022\n\016REDIR_EXCEED"
    "ED\020\014\022\017\n\013NOTFETCHING\020\r\022\017\n\013NOTMODIFIED\020\016\022\016"
    "\n\nWOULDBLOCK\020\017\022\013\n\007BLOCKED\020\020", 387);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "schema.proto", &protobuf_RegisterTypes);
  SchemaStatus::default_instance_ = new SchemaStatus();
  SchemaStatus::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_schema_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_schema_2eproto {
  StaticDescriptorInitializer_schema_2eproto() {
    protobuf_AddDesc_schema_2eproto();
  }
} static_descriptor_initializer_schema_2eproto_;


// ===================================================================

const ::google::protobuf::EnumDescriptor* SchemaStatus_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SchemaStatus_Status_descriptor_;
}
bool SchemaStatus_Status_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SchemaStatus_Status SchemaStatus::SUCCESS;
const SchemaStatus_Status SchemaStatus::FAILED;
const SchemaStatus_Status SchemaStatus::PROTO_NOT_FOUND;
const SchemaStatus_Status SchemaStatus::GONE;
const SchemaStatus_Status SchemaStatus::MOVED;
const SchemaStatus_Status SchemaStatus::TEMP_MOVED;
const SchemaStatus_Status SchemaStatus::NOTFOUND;
const SchemaStatus_Status SchemaStatus::RETRY;
const SchemaStatus_Status SchemaStatus::EXCEPTION;
const SchemaStatus_Status SchemaStatus::ACCESS_DENIED;
const SchemaStatus_Status SchemaStatus::ROBOTS_DENIED;
const SchemaStatus_Status SchemaStatus::REDIR_EXCEEDED;
const SchemaStatus_Status SchemaStatus::NOTFETCHING;
const SchemaStatus_Status SchemaStatus::NOTMODIFIED;
const SchemaStatus_Status SchemaStatus::WOULDBLOCK;
const SchemaStatus_Status SchemaStatus::BLOCKED;
const SchemaStatus_Status SchemaStatus::Status_MIN;
const SchemaStatus_Status SchemaStatus::Status_MAX;
const int SchemaStatus::Status_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int SchemaStatus::kCodeFieldNumber;
const int SchemaStatus::kLastModifiedFieldNumber;
const int SchemaStatus::kArgsFieldNumber;
#endif  // !_MSC_VER

SchemaStatus::SchemaStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SchemaStatus::InitAsDefaultInstance() {
}

SchemaStatus::SchemaStatus(const SchemaStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SchemaStatus::SharedCtor() {
  _cached_size_ = 0;
  code_ = 1;
  last_modified_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SchemaStatus::~SchemaStatus() {
  SharedDtor();
}

void SchemaStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SchemaStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SchemaStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SchemaStatus_descriptor_;
}

const SchemaStatus& SchemaStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_schema_2eproto();  return *default_instance_;
}

SchemaStatus* SchemaStatus::default_instance_ = NULL;

SchemaStatus* SchemaStatus::New() const {
  return new SchemaStatus;
}

void SchemaStatus::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    code_ = 1;
    last_modified_ = GOOGLE_ULONGLONG(0);
  }
  args_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SchemaStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .schema.type.SchemaStatus.Status code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::schema::type::SchemaStatus_Status_IsValid(value)) {
            set_code(static_cast< ::schema::type::SchemaStatus_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_last_modified;
        break;
      }
      
      // optional uint64 last_modified = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last_modified:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_modified_)));
          _set_bit(1);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_args;
        break;
      }
      
      // repeated string args = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_args:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_args()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->args(0).data(), this->args(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_args;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SchemaStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .schema.type.SchemaStatus.Status code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }
  
  // optional uint64 last_modified = 2 [default = 0];
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->last_modified(), output);
  }
  
  // repeated string args = 3;
  for (int i = 0; i < this->args_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->args(i).data(), this->args(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->args(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SchemaStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .schema.type.SchemaStatus.Status code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }
  
  // optional uint64 last_modified = 2 [default = 0];
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->last_modified(), target);
  }
  
  // repeated string args = 3;
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->args(i).data(), this->args(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->args(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SchemaStatus::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .schema.type.SchemaStatus.Status code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
    }
    
    // optional uint64 last_modified = 2 [default = 0];
    if (has_last_modified()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->last_modified());
    }
    
  }
  // repeated string args = 3;
  total_size += 1 * this->args_size();
  for (int i = 0; i < this->args_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->args(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SchemaStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SchemaStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SchemaStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SchemaStatus::MergeFrom(const SchemaStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  args_.MergeFrom(from.args_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_code(from.code());
    }
    if (from._has_bit(1)) {
      set_last_modified(from.last_modified());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SchemaStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SchemaStatus::CopyFrom(const SchemaStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SchemaStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void SchemaStatus::Swap(SchemaStatus* other) {
  if (other != this) {
    std::swap(code_, other->code_);
    std::swap(last_modified_, other->last_modified_);
    args_.Swap(&other->args_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SchemaStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SchemaStatus_descriptor_;
  metadata.reflection = SchemaStatus_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace type
}  // namespace schema

// @@protoc_insertion_point(global_scope)
