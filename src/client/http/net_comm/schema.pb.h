// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schema.proto

#ifndef PROTOBUF_schema_2eproto__INCLUDED
#define PROTOBUF_schema_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace schema {
namespace type {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_schema_2eproto();
void protobuf_AssignDesc_schema_2eproto();
void protobuf_ShutdownFile_schema_2eproto();

class SchemaStatus;

enum SchemaStatus_Status {
  SchemaStatus_Status_SUCCESS = 1,
  SchemaStatus_Status_FAILED = 2,
  SchemaStatus_Status_PROTO_NOT_FOUND = 3,
  SchemaStatus_Status_GONE = 4,
  SchemaStatus_Status_MOVED = 5,
  SchemaStatus_Status_TEMP_MOVED = 6,
  SchemaStatus_Status_NOTFOUND = 7,
  SchemaStatus_Status_RETRY = 8,
  SchemaStatus_Status_EXCEPTION = 9,
  SchemaStatus_Status_ACCESS_DENIED = 10,
  SchemaStatus_Status_ROBOTS_DENIED = 11,
  SchemaStatus_Status_REDIR_EXCEEDED = 12,
  SchemaStatus_Status_NOTFETCHING = 13,
  SchemaStatus_Status_NOTMODIFIED = 14,
  SchemaStatus_Status_WOULDBLOCK = 15,
  SchemaStatus_Status_BLOCKED = 16
};
bool SchemaStatus_Status_IsValid(int value);
const SchemaStatus_Status SchemaStatus_Status_Status_MIN = SchemaStatus_Status_SUCCESS;
const SchemaStatus_Status SchemaStatus_Status_Status_MAX = SchemaStatus_Status_BLOCKED;
const int SchemaStatus_Status_Status_ARRAYSIZE = SchemaStatus_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* SchemaStatus_Status_descriptor();
inline const ::std::string& SchemaStatus_Status_Name(SchemaStatus_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    SchemaStatus_Status_descriptor(), value);
}
inline bool SchemaStatus_Status_Parse(
    const ::std::string& name, SchemaStatus_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SchemaStatus_Status>(
    SchemaStatus_Status_descriptor(), name, value);
}
// ===================================================================

class SchemaStatus : public ::google::protobuf::Message {
 public:
  SchemaStatus();
  virtual ~SchemaStatus();
  
  SchemaStatus(const SchemaStatus& from);
  
  inline SchemaStatus& operator=(const SchemaStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SchemaStatus& default_instance();
  
  void Swap(SchemaStatus* other);
  
  // implements Message ----------------------------------------------
  
  SchemaStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SchemaStatus& from);
  void MergeFrom(const SchemaStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef SchemaStatus_Status Status;
  static const Status SUCCESS = SchemaStatus_Status_SUCCESS;
  static const Status FAILED = SchemaStatus_Status_FAILED;
  static const Status PROTO_NOT_FOUND = SchemaStatus_Status_PROTO_NOT_FOUND;
  static const Status GONE = SchemaStatus_Status_GONE;
  static const Status MOVED = SchemaStatus_Status_MOVED;
  static const Status TEMP_MOVED = SchemaStatus_Status_TEMP_MOVED;
  static const Status NOTFOUND = SchemaStatus_Status_NOTFOUND;
  static const Status RETRY = SchemaStatus_Status_RETRY;
  static const Status EXCEPTION = SchemaStatus_Status_EXCEPTION;
  static const Status ACCESS_DENIED = SchemaStatus_Status_ACCESS_DENIED;
  static const Status ROBOTS_DENIED = SchemaStatus_Status_ROBOTS_DENIED;
  static const Status REDIR_EXCEEDED = SchemaStatus_Status_REDIR_EXCEEDED;
  static const Status NOTFETCHING = SchemaStatus_Status_NOTFETCHING;
  static const Status NOTMODIFIED = SchemaStatus_Status_NOTMODIFIED;
  static const Status WOULDBLOCK = SchemaStatus_Status_WOULDBLOCK;
  static const Status BLOCKED = SchemaStatus_Status_BLOCKED;
  static inline bool Status_IsValid(int value) {
    return SchemaStatus_Status_IsValid(value);
  }
  static const Status Status_MIN =
    SchemaStatus_Status_Status_MIN;
  static const Status Status_MAX =
    SchemaStatus_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    SchemaStatus_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return SchemaStatus_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return SchemaStatus_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return SchemaStatus_Status_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .schema.type.SchemaStatus.Status code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::schema::type::SchemaStatus_Status code() const;
  inline void set_code(::schema::type::SchemaStatus_Status value);
  
  // optional uint64 last_modified = 2 [default = 0];
  inline bool has_last_modified() const;
  inline void clear_last_modified();
  static const int kLastModifiedFieldNumber = 2;
  inline ::google::protobuf::uint64 last_modified() const;
  inline void set_last_modified(::google::protobuf::uint64 value);
  
  // repeated string args = 3;
  inline int args_size() const;
  inline void clear_args();
  static const int kArgsFieldNumber = 3;
  inline const ::std::string& args(int index) const;
  inline ::std::string* mutable_args(int index);
  inline void set_args(int index, const ::std::string& value);
  inline void set_args(int index, const char* value);
  inline void set_args(int index, const char* value, size_t size);
  inline ::std::string* add_args();
  inline void add_args(const ::std::string& value);
  inline void add_args(const char* value);
  inline void add_args(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& args() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_args();
  
  // @@protoc_insertion_point(class_scope:schema.type.SchemaStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int code_;
  ::google::protobuf::uint64 last_modified_;
  ::google::protobuf::RepeatedPtrField< ::std::string> args_;
  friend void  protobuf_AddDesc_schema_2eproto();
  friend void protobuf_AssignDesc_schema_2eproto();
  friend void protobuf_ShutdownFile_schema_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SchemaStatus* default_instance_;
};
// ===================================================================


// ===================================================================

// SchemaStatus

// required .schema.type.SchemaStatus.Status code = 1;
inline bool SchemaStatus::has_code() const {
  return _has_bit(0);
}
inline void SchemaStatus::clear_code() {
  code_ = 1;
  _clear_bit(0);
}
inline ::schema::type::SchemaStatus_Status SchemaStatus::code() const {
  return static_cast< ::schema::type::SchemaStatus_Status >(code_);
}
inline void SchemaStatus::set_code(::schema::type::SchemaStatus_Status value) {
  GOOGLE_DCHECK(::schema::type::SchemaStatus_Status_IsValid(value));
  _set_bit(0);
  code_ = value;
}

// optional uint64 last_modified = 2 [default = 0];
inline bool SchemaStatus::has_last_modified() const {
  return _has_bit(1);
}
inline void SchemaStatus::clear_last_modified() {
  last_modified_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 SchemaStatus::last_modified() const {
  return last_modified_;
}
inline void SchemaStatus::set_last_modified(::google::protobuf::uint64 value) {
  _set_bit(1);
  last_modified_ = value;
}

// repeated string args = 3;
inline int SchemaStatus::args_size() const {
  return args_.size();
}
inline void SchemaStatus::clear_args() {
  args_.Clear();
}
inline const ::std::string& SchemaStatus::args(int index) const {
  return args_.Get(index);
}
inline ::std::string* SchemaStatus::mutable_args(int index) {
  return args_.Mutable(index);
}
inline void SchemaStatus::set_args(int index, const ::std::string& value) {
  args_.Mutable(index)->assign(value);
}
inline void SchemaStatus::set_args(int index, const char* value) {
  args_.Mutable(index)->assign(value);
}
inline void SchemaStatus::set_args(int index, const char* value, size_t size) {
  args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SchemaStatus::add_args() {
  return args_.Add();
}
inline void SchemaStatus::add_args(const ::std::string& value) {
  args_.Add()->assign(value);
}
inline void SchemaStatus::add_args(const char* value) {
  args_.Add()->assign(value);
}
inline void SchemaStatus::add_args(const char* value, size_t size) {
  args_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SchemaStatus::args() const {
  return args_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SchemaStatus::mutable_args() {
  return &args_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace type
}  // namespace schema

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::schema::type::SchemaStatus_Status>() {
  return ::schema::type::SchemaStatus_Status_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_schema_2eproto__INCLUDED
